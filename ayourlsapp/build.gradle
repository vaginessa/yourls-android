buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.github.gfx.ribbonizer'

def matewarePropFile = file("mateware.properties")
if (matewarePropFile.exists()) {
    def matewareProps = new Properties();
    matewareProps.load(matewarePropFile.newDataInputStream())
    project.ext.set('mateware', matewareProps.getProperty('dir'))
    apply from: project.ext.mateware + "/mateware.gradle"
}

android {
    compileSdkVersion rootProject.ext.compileSdkVer
    buildToolsVersion rootProject.ext.buildToolsVer

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "de.mateware.ayourls"
        minSdkVersion rootProject.ext.minSdkVer
        targetSdkVersion rootProject.ext.targetSdkVer
        versionCode rootProject.ext.versionCodeInt
        versionName "1.0." + versionCode
    }
    buildTypes {
        debug {
            ext.enableCrashlytics = false
            versionNameSuffix "-DEBUG"
            applicationIdSuffix ".debug"
        }
        release {
            zipAlignEnabled true
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

def buildConfigAndResStringField(variant, name, value) {
    variant.resValue 'string', name.toLowerCase(), value
    variant.buildConfigField 'String', name, "\"$value\""
}

afterEvaluate {
    android.applicationVariants.all { variant ->
        buildConfigAndResStringField variant, "CONTENT_AUTHORITY", variant.applicationId + ".provider"
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibVer";
    compile "com.android.support:support-v4:$rootProject.ext.supportLibVer";
    compile "com.android.support:preference-v7:$rootProject.ext.supportLibVer";
    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibVer";
    compile "com.android.support:design:$rootProject.ext.supportLibVer";
    compile "com.android.support:cardview-v7:$rootProject.ext.supportLibVer";
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'com.github.tony19:logback-android-core:1.1.1-6'
    compile('com.github.tony19:logback-android-classic:1.1.1-6') {
        exclude group: 'com.google.android', module: 'android'
    }
    compile 'com.mcxiaoke.volley:library:1.0.19'
    compile 'org.apache.commons:commons-collections4:4.0'
    compile 'com.google.zxing:core:3.2.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true;
    }
    compile 'com.gitlab.matecode:androiddialog:1.1.12'
}


